service: edupal-backend
app: edupal
org: photonmz
version: v0.1
stage: dev
region: ap-southeast-1

websocketApi:
  component: "@serverless/backend-socket"
  inputs:
    roleName: ${permissions.name}
    name: ${service}-${version}-${stage}
    memory: 128
    timeout: 10
    env:
      db: ${database.name}
      # Used for encrypting answers to questions nothing important so this is ok
      CRYPTO_SECRET: fweuhrfwJAHFJKAWFHkjaaswklfhads329807
    code:
      src: ./

database:
  component: "@serverless/aws-dynamodb"
  inputs:
    name: ${service}-${version}-${stage}
    region: ap-southeast-1
    # Don't delete the Database Table if "serverless remove" is run
    deletionPolicy: retain
    # Simple, single-table design
    attributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
      - AttributeName: classId
        AttributeType: S
      - AttributeName: coinTotal
        AttributeType: N
    keySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
    globalSecondaryIndexes:
      - IndexName: ClassIndex
        KeySchema:
          - AttributeName: classId
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        Projection:
          NonKeyAttributes:
            - pk
            - response
            - question
            - meta
            - coinTotal
            - name
            - gamification
          ProjectionType: INCLUDE
      - IndexName: LeaderboardIndex
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: coinTotal
            KeyType: RANGE
        Projection:
          NonKeyAttributes:
            - sk
            - classId
            - name
            - gamification
          ProjectionType: INCLUDE
      - IndexName: ReverseIndex
        KeySchema:
          - AttributeName: sk
            KeyType: HASH
          - AttributeName: pk
            KeyType: RANGE
        Projection:
          NonKeyAttributes:
            - classId
            - coinTotal
            - name
            - gamification
            - powerupsBought
          ProjectionType: INCLUDE

permissions:
  component: "@serverless/aws-iam-role"
  inputs:
    name: ${service}-${version}-${stage}
    service: lambda.amazonaws.com
    region: ap-southeast-1
    policy: 
      - Effect: Allow
        Action:
          - "dynamodb:Query"
          - "dynamodb:GetItem"
          - "dynamodb:PutItem"
          - "dynamodb:UpdateItem"
          - "dynamodb:DeleteItem"
        Resource:        
          - arn:aws:dynamodb:${region}:account-id:table/${database.name}
          - arn:aws:dynamodb:${region}:account-id:table/${database.name}/index/*